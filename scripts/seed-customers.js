const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

const customers = [
  {
    name: "Nguy·ªÖn VƒÉn An",
    phone: "0901234567",
    email: "nguyenvanan@email.com",
    province: "79",
    provinceName: "TP. H·ªì Ch√≠ Minh",
    ward: "7609",
    wardName: "Ph∆∞·ªùng 1",
    source: "WEBSITE",
    status: "NEW",
    processingStatus: "PENDING",
    notes: "Kh√°ch h√†ng quan t√¢m ƒë·∫øn g√≥i onsen"
  },
  {
    name: "Tr·∫ßn Th·ªã B√¨nh",
    phone: "0912345678",
    email: "tranthibinh@email.com",
    province: "01",
    provinceName: "H√† N·ªôi",
    ward: "0001",
    wardName: "Ph∆∞·ªùng Ph√∫c X√°",
    source: "BOOKING",
    status: "CONTACTED",
    processingStatus: "IN_PROGRESS",
    notes: "ƒê√£ g·ªçi ƒëi·ªán t∆∞ v·∫•n, kh√°ch quan t√¢m ƒë·∫øn ph√≤ng cao c·∫•p",
    lastContactDate: new Date(),
    nextFollowUpDate: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000) // 7 days from now
  },
  {
    name: "L√™ VƒÉn C∆∞·ªùng",
    phone: "0923456789",
    email: "levancuong@email.com",
    province: "92",
    provinceName: "C·∫ßn Th∆°",
    ward: "9201",
    wardName: "Ph∆∞·ªùng An B√¨nh",
    source: "ADMIN",
    status: "CONVERTED",
    processingStatus: "RESOLVED",
    notes: "ƒê√£ ƒë·∫∑t ph√≤ng th√†nh c√¥ng, kh√°ch r·∫•t h√†i l√≤ng"
  },
  {
    name: "Ph·∫°m Th·ªã Dung",
    phone: "0934567890",
    email: "phamthidung@email.com",
    province: "48",
    provinceName: "ƒê√† N·∫µng",
    ward: "4801",
    wardName: "Ph∆∞·ªùng An H·∫£i B·∫Øc",
    source: "WEBSITE",
    status: "LOST",
    processingStatus: "CLOSED",
    notes: "Kh√°ch kh√¥ng quan t√¢m sau khi t∆∞ v·∫•n"
  },
  {
    name: "Ho√†ng VƒÉn Em",
    phone: "0945678901",
    email: "hoangvanem@email.com",
    province: "95",
    provinceName: "B·∫°c Li√™u",
    ward: "9501",
    wardName: "Ph∆∞·ªùng 1",
    source: "BOOKING",
    status: "CONTACTED",
    processingStatus: "FOLLOW_UP",
    notes: "C·∫ßn follow-up v·ªÅ g√≥i tr·∫£i nghi·ªám ƒë·∫∑c bi·ªát",
    lastContactDate: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000), // 3 days ago
    nextFollowUpDate: new Date(Date.now() + 2 * 24 * 60 * 60 * 1000) // 2 days from now
  }
];

async function seedCustomers() {
  try {
    console.log('üå± Seeding customers...');

    // Clear existing customers
    await prisma.customer.deleteMany();
    console.log('‚úÖ Cleared existing customers');

    // Create new customers
    for (const customer of customers) {
      await prisma.customer.create({
        data: customer
      });
      console.log(`‚úÖ Created customer: ${customer.name}`);
    }

    console.log('üéâ Customers seeded successfully!');
  } catch (error) {
    console.error('‚ùå Error seeding customers:', error);
  } finally {
    await prisma.$disconnect();
  }
}

seedCustomers(); 