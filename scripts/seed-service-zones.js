const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

const serviceZones = [
  {
    zoneId: "onsen",
    name: "Khu onsen ngo√†i tr·ªùi",
    title: "Khu Onsen Ngo√†i Tr·ªùi",
    description: "Tr·∫£i nghi·ªám t·∫Øm kho√°ng n√≥ng ngo√†i tr·ªùi chu·∫©n Nh·∫≠t B·∫£n, th∆∞ gi√£n gi·ªØa thi√™n nhi√™n, gi√∫p ph·ª•c h·ªìi nƒÉng l∆∞·ª£ng v√† c√¢n b·∫±ng c∆° th·ªÉ.",
    images: [
      "/banner/ONSEN 10_4.png",
      "/banner/THU VIEN 8_4.png",
      "/banner/CONG CHINH 2_3.png",
      "/banner/CONG PHU 4_4.png"
    ],
    features: [
      "N∆∞·ªõc kho√°ng n√≥ng t·ª± nhi√™n",
      "Kh√¥ng gian ngo√†i tr·ªùi xanh m√°t",
      "B·ªìn t·∫Øm kho√°ng, ph√≤ng x√¥ng h∆°i",
      "D·ªãch v·ª• spa th∆∞ gi√£n"
    ],
    order: 1,
    active: true
  },
  {
    zoneId: "lobby-library",
    name: "S·∫£nh l·ªÖ t√¢n & Th∆∞ vi·ªán",
    title: "S·∫£nh L·ªÖ T√¢n & Th∆∞ Vi·ªán",
    description: "Kh√¥ng gian ƒë√≥n ti·∫øp sang tr·ªçng, k·∫øt h·ª£p th∆∞ vi·ªán y√™n tƒ©nh v·ªõi h√†ng ng√†n ƒë·∫ßu s√°ch, l√Ω t∆∞·ªüng cho vi·ªác ƒë·ªçc s√°ch, l√†m vi·ªác v√† th∆∞ gi√£n.",
    images: [
      "/banner/THU VIEN 8_4.png",
      "/banner/ONSEN 10_4.png",
      "/banner/CONG CHINH 2_3.png",
      "/banner/CONG PHU 4_4.png"
    ],
    features: [
      "S·∫£nh l·ªÖ t√¢n sang tr·ªçng",
      "Th∆∞ vi·ªán v·ªõi h∆°n 10,000 ƒë·∫ßu s√°ch",
      "Kh√¥ng gian l√†m vi·ªác chung",
      "C√† ph√™ v√† tr√† mi·ªÖn ph√≠"
    ],
    order: 2,
    active: true
  },
  {
    zoneId: "restaurant",
    name: "Khu v·ª±c nh√† h√†ng",
    title: "Khu V·ª±c Nh√† H√†ng",
    description: "Nh√† h√†ng ph·ª•c v·ª• ·∫©m th·ª±c ƒëa d·∫°ng, kh√¥ng gian ·∫•m c√∫ng, th·ª±c ƒë∆°n phong ph√∫ t·ª´ m√≥n Vi·ªát ƒë·∫øn m√≥n √Çu, nguy√™n li·ªáu t∆∞∆°i ngon m·ªói ng√†y.",
    images: [
      "/banner/CONG CHINH 2_3.png",
      "/banner/THU VIEN 8_4.png",
      "/banner/ONSEN 10_4.png",
      "/banner/CONG PHU 4_4.png"
    ],
    features: [
      "·∫®m th·ª±c Vi·ªát & Qu·ªëc t·∫ø",
      "Kh√¥ng gian ri√™ng t∆∞ & chung",
      "Nguy√™n li·ªáu h·ªØu c∆°, t∆∞∆°i m·ªõi",
      "Ph·ª•c v·ª• chuy√™n nghi·ªáp"
    ],
    order: 3,
    active: true
  },
  {
    zoneId: "wellness",
    name: "Khu v·ª±c chƒÉm s√≥c s·ª©c kho·∫ª & v·∫≠t l√Ω tr·ªã li·ªáu",
    title: "ChƒÉm S√≥c S·ª©c Kho·∫ª & V·∫≠t L√Ω Tr·ªã Li·ªáu",
    description: "D·ªãch v·ª• chƒÉm s√≥c s·ª©c kho·∫ª to√†n di·ªán: massage, v·∫≠t l√Ω tr·ªã li·ªáu, yoga, thi·ªÅn, gi√∫p ph·ª•c h·ªìi th·ªÉ ch·∫•t v√† tinh th·∫ßn.",
    images: [
      "/banner/CONG PHU 4_4.png",
      "/banner/THU VIEN 8_4.png",
      "/banner/ONSEN 10_4.png",
      "/banner/CONG CHINH 2_3.png"
    ],
    features: [
      "Massage tr·ªã li·ªáu chuy√™n s√¢u",
      "Ph√≤ng t·∫≠p yoga & thi·ªÅn",
      "Chuy√™n gia v·∫≠t l√Ω tr·ªã li·ªáu",
      "Kh√¥ng gian y√™n tƒ©nh, ri√™ng t∆∞"
    ],
    order: 4,
    active: true
  }
];

async function seedServiceZones() {
  try {
    console.log('üå± Seeding service zones...');

    // Clear existing service zones
    await prisma.serviceZone.deleteMany();

    // Create service zones
    for (const zone of serviceZones) {
      await prisma.serviceZone.create({
        data: {
          zoneId: zone.zoneId,
          name: zone.name,
          title: zone.title,
          description: zone.description,
          images: JSON.stringify(zone.images),
          features: JSON.stringify(zone.features),
          order: zone.order,
          active: zone.active
        }
      });
      console.log(`‚úÖ Created service zone: ${zone.name}`);
    }

    console.log('üéâ Service zones seeded successfully!');
  } catch (error) {
    console.error('‚ùå Error seeding service zones:', error);
  } finally {
    await prisma.$disconnect();
  }
}

seedServiceZones(); 