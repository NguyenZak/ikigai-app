const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function seedNews() {
  try {
    console.log('üå± Seeding news data...');

    // Check if there are any users (authors)
    const users = await prisma.user.findMany();
    if (users.length === 0) {
      console.log('‚ùå No users found. Please seed users first.');
      return;
    }

    const authorId = users[0].id; // Use the first user as author

    // Sample news data
    const newsData = [
      {
        title: 'Ikigaivilla - N∆°i ngh·ªâ d∆∞·ª°ng l√Ω t∆∞·ªüng t·∫°i ƒê√† N·∫µng',
        content: `
          <h2>Ch√†o m·ª´ng ƒë·∫øn v·ªõi Ikigaivilla</h2>
          <p>Ikigaivilla l√† m·ªôt khu ngh·ªâ d∆∞·ª°ng cao c·∫•p t·ªça l·∫°c t·∫°i th√†nh ph·ªë ƒê√† N·∫µng xinh ƒë·∫πp. 
          V·ªõi v·ªã tr√≠ ƒë·∫Øc ƒë·ªãa, view bi·ªÉn tuy·ªát ƒë·∫πp v√† d·ªãch v·ª• ch·∫•t l∆∞·ª£ng, ch√∫ng t√¥i cam k·∫øt mang ƒë·∫øn 
          nh·ªØng tr·∫£i nghi·ªám ngh·ªâ d∆∞·ª°ng tuy·ªát v·ªùi nh·∫•t cho qu√Ω kh√°ch.</p>
          
          <h3>ƒê·∫∑c ƒëi·ªÉm n·ªïi b·∫≠t:</h3>
          <ul>
            <li>V·ªã tr√≠ thu·∫≠n ti·ªán, g·∫ßn trung t√¢m th√†nh ph·ªë</li>
            <li>View bi·ªÉn ƒê√† N·∫µng tuy·ªát ƒë·∫πp</li>
            <li>Ph√≤ng ngh·ªâ hi·ªán ƒë·∫°i, ti·ªán nghi</li>
            <li>D·ªãch v·ª• spa v√† massage chuy√™n nghi·ªáp</li>
            <li>Nh√† h√†ng ph·ª•c v·ª• ·∫©m th·ª±c ƒëa d·∫°ng</li>
          </ul>
          
          <p>H√£y ƒë·∫øn v√† tr·∫£i nghi·ªám s·ª± tho·∫£i m√°i, sang tr·ªçng t·∫°i Ikigaivilla!</p>
        `,
        excerpt: 'Kh√°m ph√° khu ngh·ªâ d∆∞·ª°ng cao c·∫•p Ikigaivilla t·∫°i ƒê√† N·∫µng v·ªõi view bi·ªÉn tuy·ªát ƒë·∫πp v√† d·ªãch v·ª• ch·∫•t l∆∞·ª£ng.',
        slug: 'ikigaivilla-noi-nghi-duong-ly-tuong-tai-da-nang',
        metaTitle: 'Ikigaivilla - N∆°i ngh·ªâ d∆∞·ª°ng l√Ω t∆∞·ªüng t·∫°i ƒê√† N·∫µng',
        metaDescription: 'Kh√°m ph√° khu ngh·ªâ d∆∞·ª°ng cao c·∫•p Ikigaivilla t·∫°i ƒê√† N·∫µng v·ªõi view bi·ªÉn tuy·ªát ƒë·∫πp v√† d·ªãch v·ª• ch·∫•t l∆∞·ª£ng.',
        keywords: 'ikigaivilla, ƒë√† n·∫µng, ngh·ªâ d∆∞·ª°ng, kh√°ch s·∫°n, resort, bi·ªÉn',
        featuredImage: 'https://images.unsplash.com/photo-1566073771259-6a8506099945?w=800',
        status: 'PUBLISHED',
        authorId: authorId,
        publishedAt: new Date()
      },
      {
        title: 'D·ªãch v·ª• Onsen - Tr·∫£i nghi·ªám th∆∞ gi√£n ƒë·ªôc ƒë√°o',
        content: `
          <h2>D·ªãch v·ª• Onsen t·∫°i Ikigaivilla</h2>
          <p>Tr·∫£i nghi·ªám d·ªãch v·ª• Onsen truy·ªÅn th·ªëng Nh·∫≠t B·∫£n ngay t·∫°i Ikigaivilla. 
          V·ªõi h·ªá th·ªëng b·ªìn t·∫Øm n∆∞·ªõc n√≥ng t·ª± nhi√™n, ch√∫ng t√¥i mang ƒë·∫øn cho qu√Ω kh√°ch 
          nh·ªØng gi√¢y ph√∫t th∆∞ gi√£n tuy·ªát v·ªùi.</p>
          
          <h3>L·ª£i √≠ch c·ªßa Onsen:</h3>
          <ul>
            <li>Th∆∞ gi√£n c∆° b·∫Øp, gi·∫£m stress</li>
            <li>C·∫£i thi·ªán tu·∫ßn ho√†n m√°u</li>
            <li>L√†m ƒë·∫πp da t·ª± nhi√™n</li>
            <li>TƒÉng c∆∞·ªùng s·ª©c kh·ªèe</li>
          </ul>
          
          <p>H√£y ƒë·∫∑t l·ªãch ngay h√¥m nay ƒë·ªÉ tr·∫£i nghi·ªám d·ªãch v·ª• Onsen ƒë·ªôc ƒë√°o!</p>
        `,
        excerpt: 'Tr·∫£i nghi·ªám d·ªãch v·ª• Onsen truy·ªÅn th·ªëng Nh·∫≠t B·∫£n v·ªõi nhi·ªÅu l·ª£i √≠ch cho s·ª©c kh·ªèe v√† s·∫Øc ƒë·∫πp.',
        slug: 'dich-vu-onsen-trai-nghiem-thu-gian-doc-dao',
        metaTitle: 'D·ªãch v·ª• Onsen - Tr·∫£i nghi·ªám th∆∞ gi√£n ƒë·ªôc ƒë√°o t·∫°i Ikigaivilla',
        metaDescription: 'Tr·∫£i nghi·ªám d·ªãch v·ª• Onsen truy·ªÅn th·ªëng Nh·∫≠t B·∫£n v·ªõi nhi·ªÅu l·ª£i √≠ch cho s·ª©c kh·ªèe v√† s·∫Øc ƒë·∫πp.',
        keywords: 'onsen, t·∫Øm n∆∞·ªõc n√≥ng, th∆∞ gi√£n, spa, ikigaivilla',
        featuredImage: 'https://images.unsplash.com/photo-1540555700478-4be289fbecef?w=800',
        status: 'PUBLISHED',
        authorId: authorId,
        publishedAt: new Date()
      },
      {
        title: 'Kh√°m ph√° c√°c lo·∫°i ph√≤ng t·∫°i Ikigaivilla',
        content: `
          <h2>C√°c lo·∫°i ph√≤ng t·∫°i Ikigaivilla</h2>
          <p>Ikigaivilla cung c·∫•p ƒëa d·∫°ng c√°c lo·∫°i ph√≤ng ngh·ªâ ƒë·ªÉ ƒë√°p ·ª©ng m·ªçi nhu c·∫ßu c·ªßa qu√Ω kh√°ch:</p>
          
          <h3>1. Ph√≤ng Deluxe</h3>
          <p>Ph√≤ng Deluxe v·ªõi di·ªán t√≠ch 35m¬≤, view bi·ªÉn tuy·ªát ƒë·∫πp, trang thi·∫øt b·ªã hi·ªán ƒë·∫°i 
          v√† d·ªãch v·ª• ph√≤ng 24/7.</p>
          
          <h3>2. Ph√≤ng Suite</h3>
          <p>Ph√≤ng Suite cao c·∫•p v·ªõi di·ªán t√≠ch 50m¬≤, ph√≤ng kh√°ch ri√™ng bi·ªát, 
          b·ªìn t·∫Øm sang tr·ªçng v√† view to√†n c·∫£nh bi·ªÉn.</p>
          
          <h3>3. Villa Ri√™ng</h3>
          <p>Villa ri√™ng bi·ªát v·ªõi kh√¥ng gian r·ªông r√£i, h·ªì b∆°i ri√™ng v√† d·ªãch v·ª• butler 24/7.</p>
          
          <p>M·ªói lo·∫°i ph√≤ng ƒë·ªÅu ƒë∆∞·ª£c thi·∫øt k·∫ø t·ªëi ∆∞u ƒë·ªÉ mang ƒë·∫øn tr·∫£i nghi·ªám ngh·ªâ d∆∞·ª°ng t·ªët nh·∫•t.</p>
        `,
        excerpt: 'Kh√°m ph√° ƒëa d·∫°ng c√°c lo·∫°i ph√≤ng ngh·ªâ t·∫°i Ikigaivilla t·ª´ ph√≤ng Deluxe ƒë·∫øn Villa ri√™ng bi·ªát.',
        slug: 'kham-pha-cac-loai-phong-tai-ikigaivilla',
        metaTitle: 'Kh√°m ph√° c√°c lo·∫°i ph√≤ng t·∫°i Ikigaivilla - ƒê√† N·∫µng',
        metaDescription: 'Kh√°m ph√° ƒëa d·∫°ng c√°c lo·∫°i ph√≤ng ngh·ªâ t·∫°i Ikigaivilla t·ª´ ph√≤ng Deluxe ƒë·∫øn Villa ri√™ng bi·ªát.',
        keywords: 'ph√≤ng ngh·ªâ, deluxe, suite, villa, ikigaivilla, ƒë√† n·∫µng',
        featuredImage: 'https://images.unsplash.com/photo-1571896349842-33c89424de2d?w=800',
        status: 'PUBLISHED',
        authorId: authorId,
        publishedAt: new Date()
      }
    ];

    // Clear existing news
    await prisma.news.deleteMany({});

    // Create news
    for (const news of newsData) {
      const createdNews = await prisma.news.create({
        data: news
      });
      console.log(`‚úÖ Created news: ${createdNews.title} (slug: ${createdNews.slug})`);
    }

    console.log('üéâ News seeding completed!');
    
    // List all available slugs
    const allNews = await prisma.news.findMany({
      select: { slug: true, title: true }
    });
    
    console.log('\nüìã Available news slugs:');
    allNews.forEach(news => {
      console.log(`  - ${news.slug} (${news.title})`);
    });

  } catch (error) {
    console.error('‚ùå Error seeding news:', error);
  } finally {
    await prisma.$disconnect();
  }
}

seedNews(); 